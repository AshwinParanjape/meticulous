#!/usr/bin/env python
import argparse
from meticulous import Experiments
from tabulate import tabulate
from meticulous.summary_utils import informative_cols
import pandas as pd
pd.set_option('display.max_colwidth', 20)
pd.set_option('display.max_columns', 0)
pd.set_option('display.max_rows', None)

pd.set_option('precision', 4)
parser = argparse.ArgumentParser()
parser.add_argument('directory', action="store", help='Directory with stored experiments')
parser.add_argument("--args", type=str, choices=['none', 'truncated', 'non-default', 'all'], default='none',
                    help='Display args; \n'
                         'none        - don\'t display args,\n'
                         'truncated   - removes all values which stay constant across experiments\n,'
                         'non-default - shows arguments that modify default values\n'
                         'all         - all arguments')

parser.add_argument("--summary", action='store_true')
args = parser.parse_args()
exps = Experiments(experiments_directory=args.directory)
df = exps.as_dataframe()
display_df = df[['']]
dfs = [display_df]


if args.args == 'all':
    args_df = df[['args']]
    dfs.append(args_df)
elif args.args == 'non-default':
    not_default_args = (df['args'] != df['default_args'])
    non_default_cols = [('args', c) for c, v in not_default_args.max().iteritems() if v]
    args_df = df[non_default_cols]
    dfs.append(args_df)
elif args.args == 'truncated':
    args_df = df[[('args', c) for c in informative_cols(df['args'])]]
    dfs.append(args_df)
else:
    pass

#elif :
#    cols+=[['args', c] for c in informative_cols(df['args'])]
#df[cols]
if args.summary:
    dfs.append(df[['summary']])
final_df = pd.concat(dfs, axis=1)
final_df = final_df.reset_index().set_index([('', 'sha'), 'expid'])
print(final_df)
#_mprint(tabulate_experiments(exps.experiments, display_args=args.display_args))

